pipeline { 
    agent any

    stages {
        stage ('[Test]') {
            parallel {
                stage ('BE Test') {
                    steps {
                        echo 'BE - Test start'
                        dir ('backend/core-service'){
                            sh'''
                                chmod +x gradlew
                                ./gradlew test
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'BE - Success Test'
                        }
                        failure {
                            error 'BE - Fail Test'
                        }
                    }
                }
                stage ('FE Test') {
                    steps {
                        echo 'FE - Test start'
                        dir ('frontend'){
                            sh'''
                                yarn cache clean
                                yarn install
                                yarn test
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'BE - Success Test'
                        }
                        failure {
                            error 'BE - Fail Test'
                        }
                    }
                }
                stage ('SDK Test') {
                    steps {
                        echo 'JS SDK - Test start'
                        dir ('sdk/js/js-sdk'){
                            sh'''
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'JS SDK - Success Test'
                        }
                        failure {
                            error 'JS SDK - Fail Test'
                        }
                    }
                }
            }
        }
        stage ('[SonarQube Reporting]') {
            parallel {
                stage ('BE Sonar') {
                    steps {
                        echo 'BE - Sonar start'
                        dir ('backend/core-service'){
                            sh'''
                                chmod +x gradlew
                                ./gradlew sonar
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'BE - Success SonarQube Reporting'
                        }
                        failure {
                            error 'BE - Fail SonarQube Reporting'
                        }
                    }
                }
                stage ('FE Sonar') {
                    steps {
                        echo 'FE - SonarScanner start'
                        dir ('frontend'){
                            sh'''
                                /opt/sonar-scanner/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner -Dproject.settings=./sonar-scanner.properties
                            '''
                        }
                    }
                    post {
                        success {
                            echo 'BE - Success SonarQube Reporting'
                        }
                        failure {
                            error 'BE - Fail SonarQube Reporting'
                        }
                    }
                }
                stage ('SDK Sonar') {
                    steps {
                        echo 'JS SDK - Sonar start'
                        dir ('sdk/js/js-sdk'){
                            sh'''
                            '''
                        }
                    }
                    post {
                        success {
                            echo 'JS SDK - Success Test'
                        }
                        failure {
                            error 'JS SDK - Fail Test'
                        }
                    }
                }
            }
        }
        stage ('[Build]') {
            parallel {
                stage ('BE Build') {
                    steps {
                        echo 'BE - Build backend start'
                        dir ('backend/core-service') {
                            sh'''
                                chmod +x gradlew
                                ./gradlew clean build
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'BE - Success Build'
                        }
                        failure{
                            error 'BE - Fail Build'
                        }
                    }              
                }
                stage ('FE Build') {
                    steps {
                        echo 'FE - Build start'
                        dir ('frontend'){
                            sh'''
                                yarn build
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'FE - Success Build'
                        }
                        failure{
                            error 'FE - Fail Build'
                        }
                    }    
                }
                 stage ('SDK Build') {
                    steps {
                        echo 'JS SDK - Build start'
                        dir ('sdk/js/js-sdk'){
                            sh'''
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'JS SDK - Success Test'
                        }
                        failure {
                            error 'JS SDK - Fail Test'
                        }
                    }
                }
            }
        }
        stage ('[Deploy]') {
            parallel {
                stage ('BE Container Build') {
                    steps {
                        echo 'BE - Container Build'
                        dir ('backend/core-service'){
                            sh'''
                                docker build -t ls-backend .
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'BE - Success Container Build'
                        }
                        failure {
                            error 'BE - Fail Container Build'
                        }
                    }
                }
                stage ('FE deploy') {
                    steps {
                        echo 'FE - Deploy to Nginx'
                        dir ('frontend'){
                            sh'''
                                yarn build
                                cp -r ./dist/. /var/www/html/.
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'BE - Success Deploy to Nginx'
                        }
                        failure {
                            error 'BE - Fail Deploy to Nginx'
                        }
                    }
                }
                stage ('SDK deploy') {
                    steps {
                        echo 'JS SDK - Deploy'
                        dir ('sdk/js/js-sdk'){
                            sh'''
                            '''
                        }
                    }
                    post{
                        success {
                            echo 'JS SDK - Success Deploy'
                        }
                        failure {
                            error 'JS SDK - Fail Deploy'
                        }
                    }
                }
            }
        }
        stage ('Service Stop') {
            steps {
                echo 'Service Stop'
                sh'''
                    docker-compose down
                '''
            }
            post{
                success {
                    echo 'Success Service Stop'
                }
                failure {
                    error 'Fail Service Stop'
                }
            }
        }
        stage ('Service Start') {
            steps {
                echo 'Service Start'
                sh'''
                    scp -i /ssh/private/.pem /var/jenkins_home/workspace/lightswitch-web-cd/prometheus.yml ubuntu@ip-172-26-5-31:/home/ubuntu/prometheus/prometheus.yml
                    docker-compose up -d --build
                '''
            }
            post{
                success {
                    echo 'Success Service Start'
                }
                failure {
                    error 'Fail Service Start'
                }
            }
        }
    }
    post {
        success {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                mattermostSend (color: 'good',
                message: "Succeeded: Job '${env.JOB_NAME}' [#${env.BUILD_NUMBER}] by ${Author_Name} (<${env.BUILD_URL}|Details>)",
                endpoint: 'https://meeting.ssafy.com/hooks/a7gaycppptyo7ksza6wbpistbc',
                channel: 'lunit-builds'
                )
            }
        }
        failure {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                mattermostSend (color: 'danger',
                message: "Failed: Job '${env.JOB_NAME}' [#${env.BUILD_NUMBER}] by ${Author_Name} (<${env.BUILD_URL}|Details>)",
                endpoint: 'https://meeting.ssafy.com/hooks/a7gaycppptyo7ksza6wbpistbc',
                channel: 'lunit-builds'
                )
            }
        }
    }  
}
